#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: eSirPlayground
# Youtube Channel: https://goo.gl/fvkdwm 
#=================================================

name: Build

on: 
  # release:
  #   types: [published]

  #push:
  #  branches: 
  #    - master

  schedule:
   - cron: 0 0 * * 1
  
  watch:
   types: [started]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:    
      matrix:
        config: [CR6608, K2P, Newifi_D2, x86_64, AX6S, 360T7]

    steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true
    
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt update
        sudo -E apt install -y build-essential gawk gcc-multilib flex git gettext libncurses5-dev libssl-dev python3-distutils zlib1g-dev
        sudo -E apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
    - name: Clone source code
      env: 
        REPO_URL: https://github.com/openwrt/openwrt
        REPO_BRANCH: master
      run: |
        git clone $REPO_URL
        cd openwrt
        git checkout $REPO_BRANCH
        git fetch -t
        git tag -l
        latest_tag=`git tag --sort=committerdate | tail -1`
        git checkout ${latest_tag}
        
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        sed -i '$a src-git kenzo https://github.com/kenzok8/openwrt-packages' feeds.conf.default
        sed -i '$a src-git small https://github.com/kenzok8/small' feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        
    #- name: Import external feeds - JerryKuKu Argon
    #  working-directory: ./openwrt
    #  run: |
    #    git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git package/luci-theme-argon-jerrykuku

    - name: Configuration Customization - Build
      env:
        CONFIG_FILE: '${{ matrix.config }}.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && make defconfig
        
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt-${{ matrix.config }} 
        path: |
          openwrt/bin/targets/**/openwrt-*

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3
